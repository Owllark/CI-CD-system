controller:

  healthProbes: true
  probes:
    startupProbe:
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 12
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5

    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5

  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"

  installPlugins:
    - kubernetes:latest
    - kubernetes-credentials:latest
    - workflow-aggregator:latest
    - workflow-job:latest
    - credentials-binding:latest
    - git:latest
    - github:latest
    - mstest:latest
    - htmlpublisher:latest
    - generic-webhook-trigger:latest
    - configuration-as-code:1670.v564dc8b_982d0
    - job-dsl
    - ssh-agent
    - configuration-as-code-groovy
    - junit


  # argocd-webhook-token
  # dockerhub-password
  # github-host-key
  # github-ssh
  existingSecret: jenkins-credentials-secret
  
  cloudName: "default"

  JCasC:
    enabled: true
    configScripts:
      general: |
        jenkins:
          agentProtocols:
          - "JNLP4-connect"
          - "Ping"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          globalNodeProperties:
          - envVars:
              env:
              - key: "GITHUB_REPO"
                value: <{repoUrlSSH}>
          clouds:
          - kubernetes:
              containerCap: 10
              containerCapStr: "10"
              jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
              jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
              name: "kubernetes"
              namespace: "jenkins"
              podLabels:
              - key: "jenkins/jenkins-jenkins-agent"
                value: "true"
              serverUrl: "https://kubernetes.default"
              templates:
              - containers:
                - args: "^${computer.jnlpmac} ^${computer.name}"
                  envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://jenkins.jenkins.svc.cluster.local:8080/"
                  image: "jenkins/inbound-agent:3107.v665000b_51092-15"
                  name: "jnlp"
                  resourceLimitCpu: "512m"
                  resourceLimitMemory: "512Mi"
                  resourceRequestCpu: "512m"
                  resourceRequestMemory: "512Mi"
                  workingDir: "/home/jenkins/agent"
                label: "jenkins-jenkins-agent"
                name: "default"
                namespace: "jenkins"
                nodeUsageMode: "NORMAL"
                podRetention: "never"
                serviceAccount: "default"
                slaveConnectTimeout: 100
                slaveConnectTimeoutStr: "100"
                yamlMergeStrategy: "override"
              - id: "9551c76d-10d2-42d8-846e-73bd684df07d"
                name: "backend-test-agent"
                yaml: |-
                  apiVersion: v1
                  kind: Pod
                  metadata:
                    namespace: jenkins
                  spec:
                    containers:
                    - name: backend-test
                      image: owllark/jenkins-agent-backend-test:latest
                      tty: true
                    imagePullSecrets:
                    - name: dockerhub-secret
                    resources:
                      limits:
                        cpu: "500m"
                        memory: "1024Mi"
                      requests:
                        cpu: "250m"
                        memory: "256Mi"
              - id: "e0dcc860-c08b-4eec-bce6-4fbc873b3661"
                name: "frontend-test-agent"
                yaml: |
                  apiVersion: v1
                  kind: Pod
                  metadata:
                    namespace: jenkins
                  spec:
                    containers:
                    - name: frontend-test
                      image: owllark/jenkins-agent-frontend-test:latest
                      tty: true
                    imagePullSecrets:
                    - name: dockerhub-secret
                    resources:
                      limits:
                        cpu: "500m"
                        memory: "1024Mi"
                      requests:
                        cpu: "250m"
                        memory: "256Mi"
              - id: "52a4d9fc-be8b-4598-abba-5a0dbff683a3"
                name: "build-agent"
                yaml: |-
                  apiVersion: v1
                  kind: Pod
                  metadata:
                    namespace: "jenkins"
                  spec:
                    containers:
                      - name: build
                        image: owllark/jenkins-agent-build:latest
                        command:
                          - cat
                        tty: true
                        securityContext:
                          privileged: true
                        volumeMounts:
                          - mountPath: /var/lib/containers
                            name: podman-volume
                        resources:
                          limits:
                            cpu: "500m"
                            memory: "2048Mi"
                          requests:
                            cpu: "250m"
                            memory: "256Mi"
                    imagePullSecrets:
                    - name: dockerhub-secret
                    restartPolicy: Never
                    volumes:
                      - name: podman-volume
                        emptyDir: {}

        security:
          gitHooks:
            allowedOnAgents: false
            allowedOnController: false
          gitHostKeyVerificationConfiguration:
            sshHostKeyVerificationStrategy: "noHostKeyVerificationStrategy"
          scriptApproval:
            approvedSignatures:
            - "method hudson.model.Run getPreviousSuccessfulBuild"
            - "method jenkins.scm.RunWithSCM getChangeSets"
            - "method org.jenkinsci.plugins.workflow.support.steps.build.RunWrapper getRawBuild"
        unclassified:
          buildDiscarders:
            configuredBuildDiscarders:
            - "jobBuildDiscarder"
          fingerprints:
            fingerprintCleanupDisabled: false
            storage: "file"
        tool:
          git:
            installations:
            - home: "git"
              name: "Default"
          mavenGlobalConfig:
            globalSettingsProvider: "standard"
            settingsProvider: "standard"

rbac:
    create: true
    readSecrets: true

